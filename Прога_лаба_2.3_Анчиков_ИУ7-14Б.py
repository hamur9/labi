# Лабораторная работа по программированию №2 Часть 2.3
# 1 семестр; сентябрь 2024 года
# Анчиков Пётр ИУ7-14Б

# Программа:
#   Программа, определяющая принадлежность точки заданной области, включая границы


# блок 1 - ввод исходных значений

x = float(input("Введите x:"))  # ввод координаты x
y = float(input("Введите y:"))  # ввод координаты y

# блок 2 - вычисление значений y заданых функций по введенному x

y1 = (-1) * 1 / 8 * ((x + 9) ** 2) + 8  # определение Y для первой функции по заданному X
y2 = (-1) * 1 / 8 * ((x - 9) ** 2) + 8  # определение Y для второй функции по заданному X
y3 = 7 * ((x + 8) ** 2) + 1  # определение Y для третьей функции по заданному X
y4 = 7 * ((x - 8) ** 2) + 1  # определение Y для четевертой функции по заданному X
y5 = 1 / 49 * ((x + 1) ** 2)  # определение Y для пятой функции по заданному X
y6 = 1 / 49 * ((x - 1) ** 2)  # определение Y для шестой функции по заданному X
y7 = (-1) * 4 * (x ** 2) + 2  # определение Y для седьмой функции по заданному X
y8 = 4 * (x ** 2) - 6  # определение Y для восьмой функции по заданному X
y9 = (-1) * 1 / 16 * (x ** 2)  # определение Y для девятой функции по заданному X
y10 = (-1) * 1 / 16 * (x ** 2)  # определение Y для десятой функции по заданному X
y11 = 1 / 3 * ((x + 5) ** 2) - 7  # определение Y для одиннадацатой функции по заданному X
y12 = 1 / 3 * ((x - 5) ** 2) - 7  # определение Y для двенадцатой функции по заданному X
y13 = -2 * ((x + 1) ** 2) - 2  # определение Y для тринадцатой функции по заданному X
y14 = -2 * ((x - 1) ** 2) - 2  # определение Y для четырнадцатой функции по заданному X
y15 = 3 / 2 * x + 2  # определение Y для пятнадцатой функции по заданному X
y16 = -3 / 2 * x + 2  # определение Y для шестнадцатой функции по заданному X

# блок 3 - определение принадлежности заданной точки к области, включая границы

if (y == y15) or (y == y16):  # проверка попадания точки на усики бабочки
    print("YES")
elif (x == 1) or (x == -1):  # проверка попадания точки на две прямые
    if (y <= 0) and (y >= -2):
        print("YES")
    else:
        print("NO")
elif x >= -9 and x < -8:  # проверка попадания точки на промежутке
    if y >= y3 and y <= y1:  # проверка попадания точки в верхнее левое крыло на промежутке
        print("YES")
    else:
        print("NO")
elif x >= -8 and x < -2:  # проверка попадания точки на промежутке
    if y <= y1 and y >= y5:  # проверка попадания точки в верхнее левое крыло на промежутке
        print("YES")
    elif y <= y9 and y >= y11:  # проверка попадания точки в нижнее левое крыло на промежутке
        print("YES")
    else:
        print("NO")
elif x >= -2 and x < -1:  # проверка попадания точки на промежутке
    if y <= y1 and y >= y5:  # проверка попадания точки в верхнее левое крыло на промежутке
        print("YES")
    elif y <= y9 and y >= y13:  # проверка попадания точки в нижнее левое крыло на промежутке
        print("YES")
    else:
        print("NO")
elif x > -1 and x < 1:  # проверка попадания точки на промежутке
    if y <= y7 and y >= y8:  # проверка попадания точки в туловище бабочки
        print("YES")
    else:
        print("NO")
elif x > 1 and x <= 2:  # проверка попадания точки на промежутке
    if y <= y10 and y >= y14:  # проверка попадания точки в нижнее правое крыло на промежутке
        print("YES")
    elif y <= y2 and y >= y6:  # проверка попадания точки в верхнее правое крыло на промежутке
        print("YES")
    else:
        print("NO")
elif x > 2 and x <= 8:  # проверка попадания точки на промежутке
    if y <= y2 and y >= y6:  # проверка попадания точки в верхнее правое крыло на промежутке
        print("YES")
    elif y <= y10 and y >= y12:  # проверка попадания точки в нижнее правое крыло на промежутке
        print("YES")
    else:
        print("NO")
elif x > 8 and x <= 9:  # проверка попадания точки на промежутке
    if y <= y2 and y >= y4:  # проверка попадания точки в верхнее правое крыло на промежутке
        print("YES")
    else:
        print("NO")
