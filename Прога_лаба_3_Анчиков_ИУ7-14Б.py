# Лабораторная работа по программированию №3
# 1 семестр; сентябрь 2024 года
# Анчиков Пётр ИУ7-14Б

# Программа:
#   Программа, определяющая стороны треугольника и высоту из меньшего угла по координатам точек


# блок 1 - ввод исходных значений

x1 = int(input("Введите координату X для первой вершины"))  # ввод координаты X для первой вершины треугольника
y1 = int(input("Введите координату Y для первой вершины"))  # ввод координаты Y для первой вершины треугольника
x2 = int(input("Введите координату X для второй вершины"))  # ввод координаты X для второй вершины треугольника
y2 = int(input("Введите координату Y для второй вершины"))  # ввод координаты Y для второй вершины треугольника
x3 = int(input("Введите координату X для третьей вершины"))  # ввод координаты X для третьей вершины треугольника
y3 = int(input("Введите координату Y для третьей вершины"))  # ввод координаты Y для третьей вершины треугольника

# блок 2 - вычисление сторон треугольника по координатам

ax = abs(x1 - x2)  # разность координат X для первой стороны, которая образует катет
ay = abs(y1 - y2)  # разность координат Y для первой стороны, которая образует катет
a = (ax ** 2 + ay ** 2) ** 0.5  # нахождение первой стороны по теореме Пифагора
bx = abs(x2 - x3)  # разность координат X для второй стороны, которая образует катет
by = abs(y2 - y3)  # разность координат Y для второй стороны, которая образует катет
b = (bx ** 2 + by ** 2) ** 0.5  # нахождение второй стороны по теореме Пифагора
cx = abs(x1 - x3)  # разность координат X для третьей стороны, которая образует катет
cy = abs(y1 - y3)  # разность координат Y для третьей стороны, которая образует катет
c = (cx ** 2 + cy ** 2) ** 0.5  # нахождение второй стороны по теореме Пифагора

# блок 3 - вычисление косинусов углов треугольника

corn_a = (b ** 2 + c ** 2 - a ** 2) / (2 * b * c)  # косинус угла между сторонами b и c
corn_b = (a ** 2 + c ** 2 - b ** 2) / (2 * a * c)  # косинус угла между сторонами a и c
corn_c = (a ** 2 + b ** 2 - c ** 2) / (2 * a * b)  # косинус угла между сторонами a и b

# блок 4 - определение наименьшего угла

if corn_a > corn_b:  # определение большего угла из углов a и b
    if corn_a > corn_c:  # определение большего угла из углов a и c
        min_corn = corn_a  # сохранение значения косинуса наименьшего угла
        side_3 = a  # сохранение стороны противолежащей наименьшему углу
    else:
        min_corn = corn_c  # сохранение значения косинуса наименьшего угла
        side_3 = c  # сохранение стороны противолежащей наименьшему углу
else:
    if corn_b > corn_c:  # определение большего угла из углов b и c
        min_corn = corn_b  # сохранение значения косинуса наименьшего угла
        side_3 = b  # сохранение стороны противолежащей наименьшему углу
    else:
        min_corn = corn_c  # сохранение значения косинуса наименьшего угла
        side_3 = c  # сохранение стороны противолежащей наименьшему углу

# блок 5 - вычисление высоты, опущенной из наименьшего угла

p = (a + b + c) / 2  # нахождение полупериметра треугольника
h = (2 * (p * (p - a) * (p - b) * (p - c)) ** 0.5) / side_3  # нахождение высоты, опущенной из наименьшего угла

# блок 6 - вывод величин сторон треугольника и высоты, опущенной из наименьшего угла

print("Величина стороны a:", "{:g}".format(a))  # вывод величины первой стороны
print("Величина стороны b:", "{:g}".format(b))  # вывод величины второй стороны
print("Величина стороны c:", "{:g}".format(c))  # вывод величины третьей стороны
print("Величина высоты, проведенной из наименьшего угла:", "{:g}".format(h))  # вывод величины высоты
